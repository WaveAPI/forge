plugins {
	id "dev.architectury.loom" version "0.12.0-SNAPSHOT"
	id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group


loom {
	forge {
		// specify the mixin configs used in this mod
		// this will be added to the jar manifest as well!
		mixinConfigs = [
				"waveapi.mixins.json"
		]
	}
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenLocal()
	mavenCentral()
}

configurations {
	inlcudeInJar
}

task generateSources(type: Copy) {
	from {
		configurations.inlcudeInJar.collect { it.name.contains("META-INF") ? null : it.isDirectory() ? it : zipTree(it) }
	}
	into "$buildDir/generated-src"
}
compileJava.dependsOn generateSources

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	forge "net.minecraftforge:forge:${project.forge_version}"

	modImplementation group: 'org.javassist', name: 'javassist', version: '3.29.2-GA'

	inlcudeInJar group: 'org.javassist', name: 'javassist', version: '3.29.2-GA'
}

sourceSets {
	main {
		resources {
			srcDirs "$buildDir/generated-src"
		}
	}
}

processResources {
	inputs.property "version", project.version

	// this will replace the property "${version}" in your mods.toml
	// with the version you've defined in your gradle.properties
	filesMatching("META-INF/mods.toml") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}